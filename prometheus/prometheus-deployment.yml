apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups:
      - ''
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitor
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitor
data:
  rules.yml: |
    groups:
      - name: alert-test
        rules:
          - alert: node_memory_usage
            expr: |
              (
                node_memory_MemTotal_bytes
                -
                (
                  node_memory_MemFree_bytes
                  + node_memory_Buffers_bytes
                  + node_memory_Cached_bytes
                )
              )
              / node_memory_MemTotal_bytes * 100 > 30
            for: 2m
            labels:
              team: node
              severity: critical
            annotations:
              summary: "Memory usage on {{ $labels.instance }} is above 30%"
              description: "Memory usage on {{ $labels.instance }} has exceeded 30%. Current memory usage is {{ $value }}%"
          - alert: node_load5
            expr: node_load5 < 1
            for: 2m
            labels:
              team: node
              severity: normal
            annotations:
              summary: "Load on {{ $labels.instance }} is below 1"
              description: "The 5-minute load average on {{ $labels.instance }} is below 1. Current load is {{ $value }}."
  prometheus.yml: |
    global:
      scrape_interval: 10s
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
                - 'alertmanager:9093'
    rule_files:
      - /etc/prometheus/rules.yml
    scrape_configs:
      - job_name: k8s-nodes
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels:
              - __address__
            target_label: __address__
            regex: '(.+):10250'
            replacement: '$1:9100'
            action: replace
          - regex: __meta_kubernetes_node_label_(.+)
            action: labelmap
      - job_name: kubelet
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - regex: __meta_kubernetes_node_label_(.+)
            action: labelmap
      - job_name: cadvisor
        metrics_path: /metrics/cadvisor
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - regex: __meta_kubernetes_node_label_(.+)
            action: labelmap
      - job_name: apiserver
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
              - __meta_kubernetes_endpoint_port_name
            regex: default;kubernetes;https
            action: keep
      - job_name: k8s-endpoints
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
            regex: true
            action: keep
          - source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            target_label: __scheme__
            regex: (https?)
            action: replace
          - source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
            regex: (.+)
            action: replace
          - source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
            action: replace
          - source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
            regex: default;kubernetes
            action: drop
          - source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
            action: replace
          - source_labels:
              - __meta_kubernetes_service_name
            target_label: service
            action: replace
      - job_name: k8s-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_container_port_name
            regex: metrics
            action: keep
          - source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitor
spec:
  selector:
    matchLabels:
      app: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: 'prom/prometheus:v2.37.0'
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.enable-lifecycle'
          ports:
            - containerPort: 9090
              name: http
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
  namespace: monitor
spec:
  selector:
    app: prometheus
  type: NodePort
  ports:
    - protocol: TCP
      port: 9090
      targetPort: http